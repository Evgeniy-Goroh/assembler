;При нажатии клавиши «Esc» выводится сообщение «Отдыхаю, подождите минуту». Через 10-20 секунд сообщение снимается и работа ПЭВМ продолжается обычным образом
;------------------------------------------------------
;Заголовок COM-программы
        code segment
        assume cs: code, ds: code
        org     100h
;------------------------------------------------------
start:
    jmp     begin
	
;------------------------------------------------------
;Область данных резидентной части
;------------------------------------------------------
_newvectt_:
	; ключ для проверки есть ли резидент в памяти или нет
	key             dw      5456h
	; для запоминания предыдущего вектора этого прерывания
	oldvect dd      ?
	time    db      0
	Str2    db 		"I'm relaxing... Just a moment...",0Ah,0Dh,"$"
	kur1    dw      ?
	kur2    dw      ?
	flag    db  	0 ;надписи нет
	
;------------------------------------------------------
;резидентная часть
;------------------------------------------------------
_newvect_:
    push    ax
    push    es
    push    bx
    push    dx
    push    cx
    push    si
    push    di
    ;--------------------------------------------------
    cmp		cs:flag, 1
    je		_mwait_
    ;--------------------------------------------------
    ;считываем клавишу
    in		al, 60h
    cmp		al, 01
    jne		_exit_
    in		al, 61h
    or		al, 10000000b
    out		61h, al
    and		al, 01111111b
    out		61h, al
	;снятие шторы
    mov		al, 20h
    out		20h, al

    ; запоминаем положение курсора
    mov     AH, 3
    mov     BH, 0
    int     10h
    mov     cs:kur1, DX
        
;печать сообщения Str2
_Q2_:
    mov     ah, 0eh
    lea     bx, cs:Str2

_ST2_:
    mov     al, cs:[BX]
    cmp     al, '$'
    je      _II_
    int     10h
    inc     BX
    jmp     _St2_
    mov cs:flag, 1
    
;делаем задержку 5 сек
_II_:  
    mov     ah, 0
    int     1ah
    mov     bx, dx
    add     BX, 100
_mwait_:
    mov     ah, 0
    int     1ah
    cmp     bx, dx
    ja      _mwait_
    
;запоминаем положение курсора
_Q3_:
    mov     AH, 3
    mov     BH, 0
    int     10h
    mov     cs:kur2, DX
 
;восстанавливаем курсор в старой позиции
    mov     DX, cs:kur1
    mov     AH, 2
    mov     BH, 0
    int     10h
    
;затираем наше сообщение
    mov		ah, 0eh
    lea		bx, cs:Str2
_ST3_:
    mov		al, cs:[BX]
    cmp		al, '$'
    je		_kk_
    mov		AL, ' '
    int		10h
    inc		BX
    jmp		_St3_
    mov		cs:flag, 0
_kk_:
    mov     DX, cs:kur2
    mov     AH, 2
    mov     BH, 0
    int     10h
		
_exit_:
    pop     di
    pop     si
    pop     cx
    pop     dx
    pop     bx
    pop     es
    pop     ax

    jmp     cs:oldvect
		
;--------------------------------------------------
;загрузочная часть
;--------------------------------------------------
begin:
;узнаем вектор системного прерывания (es:bx)
    mov     ax, 351ch
    int     21h

;проверяем на (уже) наличия резидента в памяти
    cmp     word ptr es:[103h], 5456h
    je      Q

;запоминаем вектор правильного системного прерывания
    mov     word ptr oldvect, bx
    mov     word ptr oldvect+2, es

;устанавливаем новый вектор прерывания
    lea     dx, _newvect_    ; заносим в таблицу прерываний адрес нашего обработчика
    mov     ax, 251ch        ; для прерывания 1ch
    int     21h

    ;--------------------------------------------------
    lea     DX, begin
    int     27h
    ;--------------------------------------------------
    jmp     Quit
	;--------------------------------------------------
;печать сообщения Str1
Q:  
    mov     ah, 0eh
    lea     bx, Str1

ST1:
    mov     al, [BX]
    cmp     al, '$'
    je      Quit
    int     10h
    inc     BX
    jmp     St1
	;--------------------------------------------------
	
Quit:
    mov     ax, 4c00h
    int     21h

;------------------------------------------------------
;область данных загрузочной части
;------------------------------------------------------
Str1    db      "Resident is loaded!!!$"
;------------------------------------------------------
    code ends
    end     start